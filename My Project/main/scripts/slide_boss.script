function init(self)
	math.randomseed(os.time())
	self.health = 50
	self.attack_cooldown = 240
	self.damage_cooldown = 20
	self.currAttk = 0
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- if the cooldown is done, reset the cooldown, pick a new attack, and perform it
	if self.attack_cooldown == 0 then
		self.attack_cooldown = 240
		-- select new attack and go to loop that performs it
		self.currAttk = math.random(1, 3)
		print(self.currAttk)
		if self.currAttk == 1 then
			woodchip_attack(self)
		elseif self.currAttk == 2 then
			stick_attack(self)
		else
			child_attack(self)
		end
	end
	-- if not currently attacking then iterate cooldown
	if self.currAttk == 0 then
		self.attack_cooldown = self.attack_cooldown - 1
	end
	
end

function woodchip_attack(self)
	-- TODO: perform rearing-up animation
	-- on conclusion...
	-- return to idle
	-- and make woodchips
	print("woodchip time")
	factory.create("/slide_boss#woodchip_factory", (go.get_position()+vmath.vector3(-60, -90, 0)), nil, { dir = vmath.vector3(1, -1, 0)}, .1)
	factory.create("/slide_boss#woodchip_factory", (go.get_position()+vmath.vector3(-70, -90, 0)), nil, { dir = vmath.vector3(0, -1, 0)}, .1)
	factory.create("/slide_boss#woodchip_factory", (go.get_position()+vmath.vector3(-80, -90, 0)), nil, { dir = vmath.vector3(-1, -1, 0)}, .1)
	self.currAttk = 0
end

function stick_attack(self)
	print("ladder time")
	-- determine if L or R
	local side = math.random(1,2)
	-- TODO: play beginning-attack animation
	-- on conclusion...
	-- return to idle
	-- and spawn ladder, to attack and then delete itself
	if side == 1 then
		factory.create("/slide_boss#ladder_factory_l", nil, nil, nil, 1.2)
	else
		factory.create("/slide_boss#ladder_factory_r")
	end
	self.currAttk = 0
end

function child_attack(self)
	print("bowling time")
	-- TODO: play... something idk
	-- spawn child
	-- make it stay in place for a second and then get bowled idiot
	factory.create("/slide_boss#child_factory", (go.get_position()+vmath.vector3(-70,-90,0)), nil, nil, .1)
	self.currAttk = 0
end
