local speed = 300
local attacking = false
local anim = nil
local attackMelee = true

function init(self)
	msg.post(".", "acquire_input_focus")
	self.dir = vmath.vector3()
	self.current_anim = nil
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	if vmath.length_sqr(self.dir) > 1 then
		self.dir = vmath.normalize(self.dir)
	end

	if not attacking then
		local p = go.get_position()
		go.set_position(p + self.dir * speed * dt) 

		local anim = hash("idle")

		if self.dir.x > 0 then  
			anim = hash("run_right")
		elseif self.dir.x < 0 then
			anim = hash("run_left")
		elseif self.dir.y > 0 then
			anim = hash("run_up")
		elseif self.dir.y < 0 then
			anim = hash("run_down")
		end

		if anim ~= self.current_anim then                          -- [3]
			msg.post("#sprite", "play_animation", { id = anim })   -- [4]
			self.current_anim = anim                               -- [5]
		end

	       
		self.dir = vmath.vector3()  

	end
end

function fixed_update(self, dt)
	-- This function is called if 'Fixed Update Frequency' is enabled in the Engine section of game.project
	-- Can be coupled with fixed updates of the physics simulation if 'Use Fixed Timestep' is enabled in
	-- Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("play attack") then
		anim = self.current_anim
		if attackMelee then
			if self.dir.x > 0 then  
				msg.post(".", "play_animation", {id = hash("melee_right")})
			elseif self.dir.x < 0 then
				msg.post(".", "play_animation", {id = hash("melee_left")})
			elseif self.dir.y > 0 then
				msg.post(".", "play_animation", {id = hash("melee_up")})
			elseif self.dir.y < 0 then
				msg.post(".", "play_animation", {id = hash("melee_down")})
			end
		else
			if self.dir.x > 0 then  
				msg.post(".", "play_animation", {id = hash("ranged_right")})
			elseif self.dir.x < 0 then
				msg.post(".", "play_animation", {id = hash("ranged_left")})
			elseif self.dir.y > 0 then
				msg.post(".", "play_animation", {id = hash("ranged_up")})
			elseif self.dir.y < 0 then
				msg.post(".", "play_animation", {id = hash("ranged_down")})
			end
		end
		attacking = true
	end
	if message_id == hash("animation_done") then
		attacking = false
		msg.post("#sprite", "play_animation", { id = anim })
	end
	if message_id == hash("switch") then
		attackMelee = not attackMelee
	end
end

function on_input(self, action_id, action)
	if action_id == hash("down") then                        -- [1]
		self.dir.y = -1
	elseif action_id == hash("up") then
		self.dir.y = 1
	elseif action_id == hash("left") then                     -- [2]
		self.dir.x = -1
	elseif action_id == hash("right") then
		self.dir.x = 1
	elseif action_id == hash("attack") then
		msg.post(".", "play attack")
	elseif action_id == hash("switch") then
		msg.post(".", "switch")
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
