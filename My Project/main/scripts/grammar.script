function init(self)
	math.randomseed(os.time())
	schoolRooms = {}
	schoolRooms[1] = "R"
	schoolRooms[2] = "G"
	schoolRooms[3] = "C"
	schoolRooms[4] = "B"

	contentOps = {}
	contentOps[1] = {}
	contentOps[1][1] = "Room"
	contentOps[1][2] = "Room"
	contentOps[1][3] = "[CONTENT]"
	contentOps[2] = {}
	contentOps[2][1] = "Room"
	contentOps[2][2] = "Room"
	contentOps[3] = {}
	contentOps[3][1] = "Room"
	contentOps[4] = {}
	contentOps[4][1] = "Room"
	contentOps[4][2] = "[CONTENT]"
	contentOps[5] = {}
	contentOps[5][1] = "[CONTENT]"
	contentOps[5][2] = "[CONTENT]"

	createSentence(self, "School")
	--createSentence(self, "Outside")
	--createSentence(self, "Basement")
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function createSentence(self, space)

	sentence = {}
	sentence[1] = "Spawn"
	sentence[2] = "[CONTENT]"
	sentence[3] = "[CONTENT]"
	sentence[4] = "[CONTENT]"
	sentence[5] = "Boss"
	sentence[6] = "[CONTENT]"
	sentence[7] = "[CONTENT]"
	sentence[8] = "End"

	needUpdates = true

	while needUpdates do
		size = #sentence
		needUpdates = false

		for i=1, size do
			if sentence[i] == "[CONTENT]" then
				val = math.random(1, #contentOps)
				for j=1, #contentOps[val] do
					if j == 1 then
						sentence[i] = contentOps[val][j]
					else
						table.insert(sentence, i, contentOps[val][j])
					end
				end
				needUpdates = true
			elseif sentence[i] == "Room" then
				if space == "Outside" then
					sentence[i] = "O"
				elseif space == "Basement" then
					sentence[i] = "B"
				elseif space == "School" then
					val = math.random(1, #schoolRooms)
					sentence[i] = schoolRooms[val]
				end
			end
		end
	end


	-- can alter these values later if we want more guaranteed tiles between boss and end room. currently 2 guaranteed.
	while #sentence > 48 do
		if sentence[#sentence-3] == "Boss" then
			table.remove(sentence, #sentence-4)
		else
			table.remove(sentence, #sentence-1)
		end
	end
	
	finalSentence = table.concat(sentence, " ")
	--print(finalSentence)
	msg.post('#cellularAutomata', 'createMap', sentence)

end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function fixed_update(self, dt)
	-- This function is called if 'Fixed Update Frequency' is enabled in the Engine section of game.project
	-- Can be coupled with fixed updates of the physics simulation if 'Use Fixed Timestep' is enabled in
	-- Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end