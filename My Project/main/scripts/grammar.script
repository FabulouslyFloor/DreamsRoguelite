--[[
Script Name: grammar
Author(s): Henry Hauger
Date of Last Change: 5/6/2024

Scripts Referenced/Messaged: cellularAutomata

Script Purpose: Reproduces and performs the steps of a context-free grammar to generate random strings to be converted into the map.
]]
function init(self)
	math.randomseed(os.time())
	-- defines terminals from Room for generation within the school
	schoolRooms = {}
	schoolRooms[1] = "R"
	schoolRooms[2] = "G"
	schoolRooms[3] = "C"
	schoolRooms[4] = "B"

	-- defines nonterminals for [CONTENT]
	contentOps = {}
	contentOps[1] = {}
	contentOps[1][1] = "Room"
	contentOps[1][2] = "Room"
	contentOps[1][3] = "[CONTENT]"
	contentOps[2] = {}
	contentOps[2][1] = "Room"
	contentOps[2][2] = "Room"
	contentOps[3] = {}
	contentOps[3][1] = "Room"
	contentOps[4] = {}
	contentOps[4][1] = "Room"
	contentOps[4][2] = "[CONTENT]"
	--contentOps[5] = {}
	--contentOps[5][1] = "[CONTENT]"
	--contentOps[5][2] = "[CONTENT]"
	-- looks like: ((Room, Room, [CONTENT]), (Room, Room), (Room), (Room, [CONTENT])

	createSentence(self, "School")
	--createSentence(self, "Outside")
	--createSentence(self, "Basement")
end

function createSentence(self, space)
	-- creates starting sentence for the grammar
	sentence = {}
	sentence[1] = "Spawn"
	sentence[2] = "[CONTENT]"
	sentence[3] = "[CONTENT]"
	sentence[4] = "[CONTENT]"
	sentence[5] = "Boss"
	sentence[6] = "[CONTENT]"
	sentence[7] = "[CONTENT]"
	sentence[8] = "End"

	needUpdates = true

	while needUpdates do
		-- length of sentence at beginning of while loop
		size = #sentence
		needUpdates = false

		-- iterate through table
		for i=1, size do
			-- if [CONTENT] nonterminal found, replace
			if sentence[i] == "[CONTENT]" then
				val = math.random(1, #contentOps)
				for j=1, #contentOps[val] do
					if j == 1 then
						sentence[i] = contentOps[val][j]
					else
						table.insert(sentence, i, contentOps[val][j])
					end
				end
				needUpdates = true
			-- if Room nonterminal found, replace with terminal
			elseif sentence[i] == "Room" then
				if space == "Outside" then
					sentence[i] = "O"
				elseif space == "Basement" then
					sentence[i] = "B"
				elseif space == "School" then
					val = math.random(1, #schoolRooms)
					sentence[i] = schoolRooms[val]
				end
			end
		end
	end


	-- can alter these values later if we want more guaranteed tiles between boss and end room. currently 2 guaranteed.
	-- reduces sentence size if larger than 20, to ensure smaller maps
	while #sentence > 20 do
		if sentence[#sentence-3] == "Boss" then
			table.remove(sentence, #sentence-4)
		else
			table.remove(sentence, #sentence-1)
		end
	end
	
	finalSentence = table.concat(sentence, " ")
	--print(finalSentence)
	-- sends final sentence to cellularAutomata
	msg.post('#cellularAutomata', 'createMap', sentence)

end
