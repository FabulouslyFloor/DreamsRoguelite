function init(self)
	self.dir = vmath.vector3(0, -1, 0)
	self.speed = 400
	self.winduptimer = 100
	go.set("#sprite", "tint.w", 0)
end

function update(self, dt)
	if self.winduptimer == 0 then
		local pos = go.get_position()
		pos = pos + self.dir * self.speed * dt
		go.set_position(pos)
		local rotat = go.get_rotation()
		local change = vmath.quat_rotation_z(6.28*dt)
		go.set_rotation(rotat*change)
		--if self.rolling == false then
		--	go.cancel_animations(".", "euler.z")
		--	go.animate(".", "euler.z", go.PLAYBACK_LOOP_FORWARD, 360, go.EASING_LINEAR, 1)
			--go.animate(".", "position", go.PLAYBACK_LOOP_FORWARD, self.dir*self.speed*dt, go.EASING_LINEAR, 1)
		--	self.rolling = true
		--	print("rolling")
	else
		if self.winduptimer == 80 then
			go.animate("#sprite", "tint.w", go.PLAYBACK_ONCE_FORWARD, 1, go.EASING_INOUTQUAD, 1)
		elseif self.winduptimer == 35 then
			go.animate(".", "euler.z", go.PLAYBACK_ONCE_FORWARD, 360, go.EASING_INCIRC, .5)
		end
		self.winduptimer = self.winduptimer - 1
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("collision_response") then
		go.delete()
	end
end