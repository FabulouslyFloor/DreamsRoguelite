--[[
Script Name: loader
Author(s): Florian Hurlbert, Summer Whitley
Date of Last Change: 5/6/2024

Scripts Referenced/Messaged: self

Script Purpose: Manages requests to manipulate scenes. Loads, unloads, pauses, and unpauses scenes based on recieved messages through a proxy.
]]

local function show(self, proxy)
	if self.current_proxy then 
		-- Sends message to unload curreny scene (handled by defold)
		msg.post(self.current_proxy, "unload") 
		-- Sets current proxy to nothing
		self.current_proxy = nil
	end
	-- Sends message to the passed proxy to load itself.
	msg.post(proxy, "async_load")
end

-- When function loads
function init(self)
	print(msg.url())
	-- Gets focus
	msg.post(".", "acquire_input_focus") 
	-- Sets current proxy to nil
	self.current_proxy = nil 
	-- Sends a message to show the opening 
	msg.post("#", "show_opening") 
end

-- Handles messages recieved
function on_message(self, message_id, message, sender)
	-- If it recieves a call to display the World Select scene
	if message_id == hash("show_World_Select") then
		show(self, "#world select")
	elseif message_id == hash("show_opening") then
		show(self, "#opening")
		-- If it recieves a call to display a playable level
	-- If it recieves a call to display a playable level
elseif message_id == hash("show_Level") then
		msg.post("#level", "set_time_step", {factor = 1, mode = 1})	
		show(self,"#level")
	-- If it recieves a call to load the proxy
	elseif message_id == hash("proxy_loaded") then
		self.current_proxy = sender 
		msg.post(sender, "enable")
	-- If it recieves a call to unload a proxy
	elseif message_id == hash("proxy_unloaded") then
		print("Unloaded", sender)
	elseif message_id == hash("pause") then
		msg.post("#level", "set_time_step", {factor = 0, mode = 1})	
	elseif message_id == hash("unpause") then
		msg.post("#level", "set_time_step", {factor = 1, mode = 1})
	end
end