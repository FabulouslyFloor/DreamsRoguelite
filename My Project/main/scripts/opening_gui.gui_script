--[[

Opening GUI Script File

Controls opening splash screen and start/quit buttons

]]--

local function scene_transition(self)
	msg.post("Scenes:/controller#loader","show_World_Select") -- open world select scene
end

local function show_title(self)
	print("Executing show_title")
	local d = 0
	local to_color = gui.get_color(gui.get_node("game_title"))
	to_color.w = 1
	gui.animate(self.game_title, gui.PROP_COLOR, to_color, gui.EASING_IN, 1, d)
end

local function show_exit_button(self)
	print("Executing show_exit_button")
	local d = 0
	local to_color = gui.get_color(gui.get_node("exit_button"))
	to_color.w = 1
	gui.animate(self.exit_button, gui.PROP_COLOR, to_color, gui.EASING_IN, 1, d, show_title)
end

local function show_start_button(self)
	print("Executing show_start_button")
	local d = 0
	local to_color = gui.get_color(gui.get_node("start_button"))
	to_color.w = 1
	gui.animate(self.start_button, gui.PROP_COLOR, to_color, gui.EASING_IN, 1, d, show_exit_button)
end

local function show_background(self)
	print("Executing show_background")
	local d = .75
	local to_color = gui.get_color(gui.get_node("background"))
	to_color.w = 1
	gui.animate(self.background, gui.PROP_COLOR, to_color, gui.EASING_IN, 1, d, show_start_button)
end

local function hide_logo(self)
	print("Executing hide_logo")
	local d = 2

	gui.animate(self.logo, gui.PROP_COLOR, 0, gui.EASING_OUT, 3, d, show_background)

end

local function show_logo(self)
	print("Executing show_logo")
	local d = 1.5 		-- time delay
	-- get the color and change w (alpha) to 1 to get the end color
	local to_color = gui.get_color(gui.get_node("logo"))
	to_color.w = 1
	gui.animate(self.logo, gui.PROP_COLOR, to_color, gui.EASING_IN, 1, d, hide_logo)

end

local button_clicked = false -- No redundant clicks

function init(self)
	msg.post(".", "acquire_input_focus")

	-- Gotta get all the nodes to animate them
	self.logo = gui.get_node("logo")
	self.background = gui.get_node("background")
	self.start_button = gui.get_node("start_button")
	self.exit_button = gui.get_node("exit_button")
	self.game_title = gui.get_node("game_title")

	show_logo(self)
end

function on_input(self, action_id, action)
	-- Reacts when pressed
	if action.pressed and gui.pick_node(gui.get_node("start_button"), action.x, action.y) and button_clicked == false then
		gui.play_flipbook(self.start_button, hash("cloud-button-pushed"))
	end
	if action.pressed and gui.pick_node(gui.get_node("exit_button"), action.x, action.y) and button_clicked == false then
		gui.play_flipbook(self.exit_button, hash("cloud-button-pushed"))
	end

	-- Reacts when released
	if action.released and gui.pick_node(gui.get_node("start_button"), action.x, action.y) then
		gui.play_flipbook(self.start_button, hash("cloud-button-unpushed"))
		if button_clicked == false then
			button_clicked = true
			gui.animate(self.start_button, gui.PROP_COLOR, 0, gui.EASING_OUT, .5)
			gui.animate(self.exit_button, gui.PROP_COLOR, 0, gui.EASING_OUT, .5)
			gui.animate(self.game_title, gui.PROP_COLOR, 0, gui.EASING_OUT, .5)
			gui.animate(self.background, gui.PROP_COLOR, 0, gui.EASING_OUT, .5, .5, scene_transition)
		end
	end

	if action.released and gui.pick_node(gui.get_node("exit_button"), action.x, action.y) then
		gui.play_flipbook(self.exit_button, hash("cloud-button-unpushed"))

		if button_clicked == false then
			button_clicked = true
			sys.exit(0)
		end
	end
	
end	

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end