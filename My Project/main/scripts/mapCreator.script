WIDTH = 39
LENGTH = 39

function init(self)
end

function on_message(self, message_id, message, sender)
	
	math.randomseed(os.time())
	
	local grid = message
	roof_rooms = {}
	
	for i = 1, #grid do
		for j = 1, #grid[1] do
			local room = grid[i][j]
			local up = false
			local down = false
			local right = false
			local left = false
			if room ~= '' then
				if i == 6 then
					table.insert(roof_rooms, j)
				end
				if string.find(room, "%^") ~= nil then
					grid[i][j] = string.gsub(grid[i][j], "%^", "")
					up = true
				end

				if string.find(room, "v") ~= nil then
					grid[i][j] = string.gsub(grid[i][j], "%v", "")
					down = true
				end

				if string.find(room, "<") ~= nil then
					grid[i][j] = string.gsub(grid[i][j], "%<", "")
					left = true
				end

				if string.find(room, ">") ~= nil then
					grid[i][j] = string.gsub(grid[i][j], "%>", "")
					right = true
				end

				temp_x = (((i - 1) * WIDTH) + 1)
				temp_y = (((j - 1) * LENGTH) + 1)

				if grid[i][j] == "Spawn" then
					down = true
					spawn(temp_x, temp_y)
				elseif grid[i][j] == "C" then
					classroom(temp_x, temp_y)
				elseif grid[i][j] == "R" then
					bathroom(temp_x, temp_y)
				elseif grid[i][j] == "B" then
					basement(temp_x, temp_y)
				elseif grid[i][j] == "G" then
					gym(temp_x, temp_y)
				elseif grid[i][j] == "Boss" then
					boss(temp_x, temp_y)
				elseif grid[i][j] == "End" then
					exit(temp_x, temp_y)
				else
					classroom(temp_x, temp_y)
				end
				
				if up then
					tilemap.set_tile("/level#generateMap", "walls", temp_y+(LENGTH/2), temp_x, 7)
					tilemap.set_tile("/level#generateMap", "walls", (temp_y+(LENGTH/2))-1, temp_x, 7)
					tilemap.set_tile("/level#generateMap", "walls", (temp_y+(LENGTH/2))+1, temp_x, 7)
					tilemap.set_tile("/level#generateMap", "borders", temp_y+(LENGTH/2), temp_x, 0)
					tilemap.set_tile("/level#generateMap", "borders", (temp_y+(LENGTH/2))-1, temp_x, 25)
					tilemap.set_tile("/level#generateMap", "borders", (temp_y+(LENGTH/2))+1, temp_x, 18)
				end
				if down then
					tilemap.set_tile("/level#generateMap", "walls", temp_y+(LENGTH/2), temp_x+(WIDTH-1), 6)
					tilemap.set_tile("/level#generateMap", "walls", (temp_y+(LENGTH/2))-1, temp_x+(WIDTH-1), 6)
					tilemap.set_tile("/level#generateMap", "walls", (temp_y+(LENGTH/2))+1, temp_x+(WIDTH-1), 6)
					tilemap.set_tile("/level#generateMap", "borders", temp_y+(LENGTH/2), temp_x+(WIDTH-1), 0)
					tilemap.set_tile("/level#generateMap", "borders", (temp_y+(LENGTH/2))-1, temp_x+(WIDTH-1), 25)
					tilemap.set_tile("/level#generateMap", "borders", (temp_y+(LENGTH/2))+1, temp_x+(WIDTH-1), 18)
				end
				if right then
					tilemap.set_tile("/level#generateMap", "walls", temp_y+(LENGTH-1), temp_x+(WIDTH/2), 7, tilemap.ROTATE_270)
					tilemap.set_tile("/level#generateMap", "walls", temp_y+(LENGTH-1), (temp_x+(WIDTH/2))-1, 7, tilemap.ROTATE_270)
					tilemap.set_tile("/level#generateMap", "walls", temp_y+(LENGTH-1), (temp_x+(WIDTH/2))+1, 7, tilemap.ROTATE_270)
					tilemap.set_tile("/level#generateMap", "borders", temp_y+(LENGTH-1), temp_x+(WIDTH/2), 0)
					tilemap.set_tile("/level#generateMap", "borders", temp_y+(LENGTH-1), (temp_x+(WIDTH/2))-1, 24)
					tilemap.set_tile("/level#generateMap", "borders", temp_y+(LENGTH-1), (temp_x+(WIDTH/2))+1, 26)
				end
				if left then
					tilemap.set_tile("/level#generateMap", "walls", temp_y, temp_x+(WIDTH/2), 6, tilemap.ROTATE_270)
					tilemap.set_tile("/level#generateMap", "walls", temp_y, (temp_x+(WIDTH/2))-1, 6, tilemap.ROTATE_270)
					tilemap.set_tile("/level#generateMap", "walls", temp_y, (temp_x+(WIDTH/2))+1, 6, tilemap.ROTATE_270)
					tilemap.set_tile("/level#generateMap", "borders", temp_y, temp_x+(WIDTH/2), 0)
					tilemap.set_tile("/level#generateMap", "borders", temp_y, (temp_x+(WIDTH/2))-1, 24)
					tilemap.set_tile("/level#generateMap", "borders", temp_y, (temp_x+(WIDTH/2))+1, 26)
				end	
			end
		end
	end

	--generate roof
	--paint_roof(roof_rooms)
	msg.post('/level#fillEnemies', 'generate', grid)
end

function classroom(temp_x, temp_y)
	for x = 0, WIDTH-1 do
		for y = 0, LENGTH-1 do
			if x == 0 then
				tilemap.set_tile("/level#generateMap", "walls", temp_y+y, temp_x+x, 57)
				if y ~= 0 and y ~=38 then
					tilemap.set_tile("/level#generateMap", "borders", temp_y+y, temp_x+x, 26)
				end
			elseif y == 0 then
				tilemap.set_tile("/level#generateMap", "walls", temp_y+y, temp_x+x, 57)
				if x ~= 38 then
					tilemap.set_tile("/level#generateMap", "borders", temp_y+y, temp_x+x, 18)
				end
			elseif x == WIDTH-1 then
				tilemap.set_tile("/level#generateMap", "walls", temp_y+y, temp_x+x, 57)
				if y ~= 0 and y ~=38 then
					tilemap.set_tile("/level#generateMap", "borders", temp_y+y, temp_x+x, 24)
				end
			elseif y == LENGTH-1 then
				tilemap.set_tile("/level#generateMap", "walls", temp_y+y, temp_x+x, 57)
				tilemap.set_tile("/level#generateMap", "borders", temp_y+y, temp_x+x, 25)
			else
				local tile = math.random(31,34)
				tilemap.set_tile("/level#generateMap", "floor", temp_y+y, temp_x+x, tile)
			end
		end
	end
end

function basement(temp_x, temp_y)
	for x = 0, WIDTH-1 do
		for y = 0, LENGTH-1 do
			if x == 0 then
				tilemap.set_tile("/level#generateMap", "walls", temp_y+y, temp_x+x, 57)
				if y ~= 0 and y ~=38 then
					tilemap.set_tile("/level#generateMap", "borders", temp_y+y, temp_x+x, 26)
				end
			elseif y == 0 then
				tilemap.set_tile("/level#generateMap", "walls", temp_y+y, temp_x+x, 57)
				if x ~= 38 then
					tilemap.set_tile("/level#generateMap", "borders", temp_y+y, temp_x+x, 18)
				end
			elseif x == WIDTH-1 then
				tilemap.set_tile("/level#generateMap", "walls", temp_y+y, temp_x+x, 57)
				if y ~= 0 and y ~=38 then
					tilemap.set_tile("/level#generateMap", "borders", temp_y+y, temp_x+x, 24)
				end
			elseif y == LENGTH-1 then
				tilemap.set_tile("/level#generateMap", "walls", temp_y+y, temp_x+x, 57)
				tilemap.set_tile("/level#generateMap", "borders", temp_y+y, temp_x+x, 25)
			else
				local pool = {41,41,41,41,41,42,42,42,42,42,43,43,43,43,43,44,45,45,45,45,45}
				local tile = pool[math.random(#pool)]
				tilemap.set_tile("/level#generateMap", "floor", temp_y+y, temp_x+x, tile)
			end
		end
	end
end

function bathroom(temp_x, temp_y)
	for x = 0, WIDTH-1 do
		for y = 0, LENGTH-1 do
			if x == 0 then
				tilemap.set_tile("/level#generateMap", "walls", temp_y+y, temp_x+x, 57)
				if y ~= 0 and y ~=38 then
					tilemap.set_tile("/level#generateMap", "borders", temp_y+y, temp_x+x, 26)
				end
			elseif y == 0 then
				tilemap.set_tile("/level#generateMap", "walls", temp_y+y, temp_x+x, 57)
				if x ~= 38 then
					tilemap.set_tile("/level#generateMap", "borders", temp_y+y, temp_x+x, 18)
				end
			elseif x == WIDTH-1 then
				tilemap.set_tile("/level#generateMap", "walls", temp_y+y, temp_x+x, 57)
				if y ~= 0 and y ~=38 then
					tilemap.set_tile("/level#generateMap", "borders", temp_y+y, temp_x+x, 24)
				end
			elseif y == LENGTH-1 then
				tilemap.set_tile("/level#generateMap", "walls", temp_y+y, temp_x+x, 57)
				tilemap.set_tile("/level#generateMap", "borders", temp_y+y, temp_x+x, 25)
			else
				local pool = {1,1,1,1,1,2,2,2,2,2,3,4,4,4,4,4,5}
				local tile = pool[math.random(#pool)]
				tilemap.set_tile("/level#generateMap", "floor", temp_y+y, temp_x+x, tile)
			end
		end
	end
end

function gym(temp_x, temp_y)
	for x = 0, WIDTH-1 do
		for y = 0, LENGTH-1 do
			if x == 0 then
				tilemap.set_tile("/level#generateMap", "walls", temp_y+y, temp_x+x, 57)
				if y ~= 0 and y ~=38 then
					tilemap.set_tile("/level#generateMap", "borders", temp_y+y, temp_x+x, 26)
				end
			elseif y == 0 then
				tilemap.set_tile("/level#generateMap", "walls", temp_y+y, temp_x+x, 57)
				if x ~= 38 then
					tilemap.set_tile("/level#generateMap", "borders", temp_y+y, temp_x+x, 18)
				end
			elseif x == WIDTH-1 then
				tilemap.set_tile("/level#generateMap", "walls", temp_y+y, temp_x+x, 57)
				if y ~= 0 and y ~=38 then
					tilemap.set_tile("/level#generateMap", "borders", temp_y+y, temp_x+x, 24)
				end
			elseif y == LENGTH-1 then
				tilemap.set_tile("/level#generateMap", "walls", temp_y+y, temp_x+x, 57)
				tilemap.set_tile("/level#generateMap", "borders", temp_y+y, temp_x+x, 25)
			else
				local pool = {21,22,23}
				local tile = pool[math.random(#pool)]
				tilemap.set_tile("/level#generateMap", "floor", temp_y+y, temp_x+x, tile)
			end
		end
	end
end

function spawn(temp_x, temp_y)
	for x = 0, WIDTH-1 do
		for y = 0, LENGTH-1 do
			if x == 0 then
				tilemap.set_tile("/level#generateMap", "walls", temp_y+y, temp_x+x, 57)
				if y ~= 0 and y ~=38 then
					tilemap.set_tile("/level#generateMap", "borders", temp_y+y, temp_x+x, 26)
				end
			elseif y == 0 then
				tilemap.set_tile("/level#generateMap", "walls", temp_y+y, temp_x+x, 57)
				if x ~= 38 then
					tilemap.set_tile("/level#generateMap", "borders", temp_y+y, temp_x+x, 18)
				end
			elseif x == WIDTH-1 then
				tilemap.set_tile("/level#generateMap", "walls", temp_y+y, temp_x+x, 57)
				if y ~= 0 and y ~=38 then
					tilemap.set_tile("/level#generateMap", "borders", temp_y+y, temp_x+x, 24)
				end
			elseif y == LENGTH-1 then
				tilemap.set_tile("/level#generateMap", "walls", temp_y+y, temp_x+x, 57)
				tilemap.set_tile("/level#generateMap", "borders", temp_y+y, temp_x+x, 25)
			elseif (x == 30 and (y==21 or y==20 or y==19 or y==18 or y==17))
			or (y==16 and (x==29 or x==28 or x==27 or x==26)) 
			or (x == 25 and (y==21 or y==20 or y==19 or y==18 or y==17))
			or (y==22 and (x==24 or x==23 or x==22 or x==21)) 
			or (x == 20 and (y==21 or y==20 or y==19 or y==18 or y==17)) then
				tilemap.set_tile("/level#generateMap", "floor", temp_y+y, temp_x+x, 55)
			else
				tilemap.set_tile("/level#generateMap", "floor", temp_y+y, temp_x+x, 54)
			end
		end
	end
end

function boss(temp_x, temp_y)
	for x = 0, WIDTH-1 do
		for y = 0, LENGTH-1 do
			if x == 0 then
				tilemap.set_tile("/level#generateMap", "walls", temp_y+y, temp_x+x, 57)
				if y ~= 0 and y ~=38 then
					tilemap.set_tile("/level#generateMap", "borders", temp_y+y, temp_x+x, 26)
				end
			elseif y == 0 then
				tilemap.set_tile("/level#generateMap", "walls", temp_y+y, temp_x+x, 57)
				if x ~= 38 then
					tilemap.set_tile("/level#generateMap", "borders", temp_y+y, temp_x+x, 18)
				end
			elseif x == WIDTH-1 then
				tilemap.set_tile("/level#generateMap", "walls", temp_y+y, temp_x+x, 57)
				if y ~= 0 and y ~=38 then
					tilemap.set_tile("/level#generateMap", "borders", temp_y+y, temp_x+x, 24)
				end
			elseif y == LENGTH-1 then
				tilemap.set_tile("/level#generateMap", "walls", temp_y+y, temp_x+x, 57)
				tilemap.set_tile("/level#generateMap", "borders", temp_y+y, temp_x+x, 25)
			elseif (x == 30 and (y==21 or y==20 or y==19 or y==18 or y==17))
			or (y==16 and (x==29 or x==29 or x==28 or x==27 or x==26 or x==25 or x==24 or x ==23
			or x==22 or x==21 or x==20 or x==19 or x==18 or x==17)) or 
			(x == 22 and (y==21 or y==20 or y==19 or y==18 or y==17)) or 
			(x == 16 and (y==21 or y==20 or y==19 or y==18 or y==17)) or 
			(y==22 and (x==21 or x==20 or x==19 or x==18 or x==17)) or 
			(y==22 and (x==29 or x==28 or x==27 or x==26 or x==25 or x==24 or x==23)) then
				tilemap.set_tile("/level#generateMap", "floor", temp_y+y, temp_x+x, 54)
			else
				tilemap.set_tile("/level#generateMap", "floor", temp_y+y, temp_x+x, 55)
			end
		end
	end
end

function exit(temp_x, temp_y)
	for x = 0, WIDTH-1 do
		for y = 0, LENGTH-1 do
			if x == 0 then
				tilemap.set_tile("/level#generateMap", "walls", temp_y+y, temp_x+x, 57)
				if y ~= 0 and y ~=38 then
					tilemap.set_tile("/level#generateMap", "borders", temp_y+y, temp_x+x, 26)
				end
			elseif y == 0 then
				tilemap.set_tile("/level#generateMap", "walls", temp_y+y, temp_x+x, 57)
				if x ~= 38 then
					tilemap.set_tile("/level#generateMap", "borders", temp_y+y, temp_x+x, 18)
				end
			elseif x == WIDTH-1 then
				tilemap.set_tile("/level#generateMap", "walls", temp_y+y, temp_x+x, 57)
				if y ~= 0 and y ~=38 then
					tilemap.set_tile("/level#generateMap", "borders", temp_y+y, temp_x+x, 24)
				end
			elseif y == LENGTH-1 then
				tilemap.set_tile("/level#generateMap", "walls", temp_y+y, temp_x+x, 57)
				tilemap.set_tile("/level#generateMap", "borders", temp_y+y, temp_x+x, 25)
			elseif y == ((LENGTH+1)/2)-1 and x == (WIDTH+1)/2 then
				tilemap.set_tile("/level#generateMap", "floor", temp_y+y, temp_x+x, 8)
			elseif y == ((LENGTH+1)/2)-1 and x == ((WIDTH+1)/2)+1 then
				tilemap.set_tile("/level#generateMap", "floor", temp_y+y, temp_x+x, 9)
			else
				local pool = {41,41,41,41,41,42,42,42,42,42,43,43,43,43,43,44,45,45,45,45,45}
				local tile = pool[math.random(#pool)]
				tilemap.set_tile("/level#generateMap", "floor", temp_y+y, temp_x+x, tile)
			end

			tilemap.set_tile("/level#generateMap", "borders", temp_y+((LENGTH+1)/2), temp_x+((WIDTH+1)/2)+2, 20)
			
			if y == ((LENGTH+1)/2)-1 and x == ((WIDTH+1)/2)-1 then
				
				tilemap.set_tile("/level#generateMap", "borders", temp_y+y, temp_x+x, 26)

				--bottom middle
				tilemap.set_tile("/level#generateMap", "floor", temp_y+y, temp_x+x, 29)

				--bottom left
				tilemap.set_tile("/level#generateMap", "floor", temp_y+y-1, temp_x+x, 30)
			end

			if y == ((LENGTH+1)/2)-1 and x == ((WIDTH+1)/2)+2 then
				tilemap.set_tile("/level#generateMap", "borders", temp_y+y, temp_x+x, 24)
				
				--top middle
				tilemap.set_tile("/level#generateMap", "floor", temp_y+y, temp_x+x, 39)

				--top left
				tilemap.set_tile("/level#generateMap", "floor", temp_y+y-1, temp_x+x, 10)
			end

			if y == ((LENGTH+1)/2) and x == ((WIDTH+1)/2) then
				tilemap.set_tile("/level#generateMap", "borders", temp_y+y, temp_x+x, 25)

				--rightside bottom
				tilemap.set_tile("/level#generateMap", "floor", temp_y+y, temp_x+x, 59)

				--bottom right
				tilemap.set_tile("/level#generateMap", "floor", temp_y+y, temp_x+x-1, 40)
			end

			if y == ((LENGTH+1)/2)-2 and x == ((WIDTH+1)/2) then
				
				tilemap.set_tile("/level#generateMap", "borders", temp_y+y, temp_x+x, 18)

				--leftside bottom
				tilemap.set_tile("/level#generateMap", "floor", temp_y+y, temp_x+x, 49)
			end

			if y == ((LENGTH+1)/2) and x == ((WIDTH+1)/2)+1 then
				
				tilemap.set_tile("/level#generateMap", "borders", temp_y+y, temp_x+x, 25)
				
				--rightside top
				tilemap.set_tile("/level#generateMap", "floor", temp_y+y, temp_x+x, 59)
			end

			if y == ((LENGTH+1)/2)-2 and x == ((WIDTH+1)/2)+1 then
	
				tilemap.set_tile("/level#generateMap", "borders", temp_y+y, temp_x+x, 18)

				--leftside top
				tilemap.set_tile("/level#generateMap", "floor", temp_y+y, temp_x+x, 49)
			end

		end
	end
end

function paint_roof(roof_rooms)
	previous = -1
	for i, room in ipairs(roof_rooms) do
		temp_x = (((6 - 1) * WIDTH) + 1)
		temp_y = (((room - 1) * LENGTH) + 1)

		for x = 0, WIDTH-1 do
			for y = 0, LENGTH-1 do
				tilemap.set_tile("/level#generateMap", "roof", temp_y+y, temp_x+x, 19)

				if x == 38 then
					tilemap.set_tile("/level#generateMap", "roof", temp_y+y, temp_x+x, 39)
				end
				if (room - previous) > 1 then
					if y == 0 then
						if x==38 then
							tilemap.set_tile("/level#generateMap", "roof", temp_y+y, temp_x+x, 10)
						else
							tilemap.set_tile("/level#generateMap", "roof", temp_y+y, temp_x+x, 49)
						end
					end
				end

				if roof_rooms[i+1] ~= null then

					if (roof_rooms[i+1] - room > 1) then
						if y == LENGTH-1 then
							if x==38 then
								tilemap.set_tile("/level#generateMap", "roof", temp_y+y, temp_x+x, 20)
							else
								tilemap.set_tile("/level#generateMap", "roof", temp_y+y, temp_x+x, 59)
							end
						end
					end

				else
					if y == LENGTH-1 then
						if x==38 then
							tilemap.set_tile("/level#generateMap", "roof", temp_y+y, temp_x+x, 20)
						else
							tilemap.set_tile("/level#generateMap", "roof", temp_y+y, temp_x+x, 59)
						end
					end
				end
			end
		end
		previous = room		
	end
end